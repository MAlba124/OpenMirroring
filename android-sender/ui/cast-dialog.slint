// Copyright (C) 2025 Marcus L. Hanestad <marlhan@proton.me>
//
// This file is part of OpenMirroring.
//
// OpenMirroring is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// OpenMirroring is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with OpenMirroring.  If not, see <https://www.gnu.org/licenses/>.

import { StandardButton, Palette, VerticalBox, ListView, HorizontalBox } from "std-widgets.slint";

export component CastDialog inherits PopupWindow {
    callback closed;

    close-policy: no-auto-close;

    in property <length> parent-width;
    in property <length> parent-height;

    x: (parent-width - dialog.width) / 2;
    y: (parent-height - dialog.height) / 2;

    backgroud-layer := Rectangle {
        background: Palette.background;
        border-radius: 8px;
        width: dialog.width;
        height : dialog.height;
    }

    dialog := Dialog {
        VerticalLayout {
            // TODO: Change dynamiclly dependig on number of receivers
            height: 250px;

            Text {
                text: "Cast To";
            }

            if false: ListView {
                for data in [
                    { text: "Blue", color: #0000ff, bg: #eeeeee},
                    { text: "Cyan", color: #00ffff, bg: #222222 },
                ] : Rectangle {
                    height: 30px;
                    background: data.bg;
                    width: parent.width;
                    Text {
                        x: 0;
                        text: data.text;
                        color: data.color;
                    }
                }
            }
            if true: Text{
                text: "No data";
            }
        }
        StandardButton {
            kind: ok;
        }
        StandardButton {
            kind: cancel;
            clicked => {
                root.close();
                closed();
            }
        }
    }
}
